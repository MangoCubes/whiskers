package ch.skew.whiskers.components

import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.grid.GridCells
import androidx.compose.foundation.lazy.grid.LazyVerticalGrid
import androidx.compose.foundation.lazy.grid.items
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Text
import androidx.compose.material3.TextButton
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import ch.skew.whiskers.misskey.data.api.Emoji

@OptIn(ExperimentalMaterial3Api::class)
@Preview
@Composable
fun ReactionSelectorDialogPreview() {
    AlertDialog(onDismissRequest = { }) {
        Column(modifier = Modifier.padding(16.dp)) {
            Text("Select a reaction")
            ReactionSelector(mapOf())
        }
    }
}

@Composable
fun ReactionSelector(reactions: Map<String, Emoji>) {
    val smileysAndEmoticons = listOf(0x1f600, 0x1f603, 0x1f604, 0x1f601, 0x1f606, 0x1f605, 0x1f923, 0x1f602, 0x1f642, 0x1f643, 0x1fae0, 0x1f609, 0x1f60a, 0x1f607, 0x1f970, 0x1f60d, 0x1f929, 0x1f618, 0x1f617, 0x263a, 0x1f61a, 0x1f619, 0x1f972, 0x1f60b, 0x1f61b, 0x1f61c, 0x1f92a, 0x1f61d, 0x1f911, 0x1f917, 0x1f92d, 0x1fae2, 0x1fae3, 0x1f92b, 0x1f914, 0x1fae1, 0x1f910, 0x1f928, 0x1f610, 0x1f611, 0x1f636, 0x1fae5, 0x1f60f, 0x1f612, 0x1f644, 0x1f62c, 0x1f925, 0x1f60c, 0x1f614, 0x1f62a, 0x1f924, 0x1f634, 0x1f637, 0x1f912, 0x1f915, 0x1f922, 0x1f92e, 0x1f927, 0x1f975, 0x1f976, 0x1f974, 0x1f635, 0x1f92f, 0x1f920, 0x1f973, 0x1f978, 0x1f60e, 0x1f913, 0x1f9d0, 0x1f615, 0x1fae4, 0x1f61f, 0x1f641, 0x2639, 0x1f62e, 0x1f62f, 0x1f632, 0x1f633, 0x1f97a, 0x1f979, 0x1f626, 0x1f627, 0x1f628, 0x1f630, 0x1f625, 0x1f622, 0x1f62d, 0x1f631, 0x1f616, 0x1f623, 0x1f61e, 0x1f613, 0x1f629, 0x1f62b, 0x1f971, 0x1f624, 0x1f621, 0x1f620, 0x1f92c, 0x1f608, 0x1f47f, 0x1f480, 0x2620, 0x1f4a9, 0x1f921, 0x1f479, 0x1f47a, 0x1f47b, 0x1f47d, 0x1f47e, 0x1f916, 0x1f63a, 0x1f638, 0x1f639, 0x1f63b, 0x1f63c, 0x1f63d, 0x1f640, 0x1f63f, 0x1f63e, 0x1f648, 0x1f649, 0x1f64a, 0x1f48c, 0x1f498, 0x1f49d, 0x1f496, 0x1f497, 0x1f493, 0x1f49e, 0x1f495, 0x1f49f, 0x2763, 0x1f494, 0x2764, 0x1f9e1, 0x1f49b, 0x1f49a, 0x1f499, 0x1f49c, 0x1f90e, 0x1f5a4, 0x1f90d, 0x1f48b, 0x1f4af, 0x1f4a2, 0x1f4a5, 0x1f4ab, 0x1f4a6, 0x1f4a8, 0x1f573, 0x1f4ac, 0x1f5e8, 0x1f5ef, 0x1f4ad, 0x1f4a4)
    fun uintToBytes(value: UInt): ByteArray {
        val bytes = ByteArray(4)
        bytes[3] = (value and 0xFFU).toByte()
        bytes[2] = ((value shr 8) and 0xFFU).toByte()
        bytes[1] = ((value shr 16) and 0xFFU).toByte()
        bytes[0] = ((value shr 24) and 0xFFU).toByte()
        return bytes
    }
    LazyVerticalGrid(
        columns = GridCells.Adaptive(30.dp),
    ) {
        items(smileysAndEmoticons) { i ->
            TextButton(
                onClick = { /*TODO*/ }
            ) {
                Text(String(uintToBytes(i.toUInt()), Charsets.UTF_32))
            }
        }
    }
}